'use strict';

// для соблюдения принципа DRY имеет смысл объявить утилитарную функцию, которая будет проверять аргумент
// и возвращать true, если это положительное число

const isPositiveNumber = (number) => !isNaN(number) && number >= 0;

// Задание №1:
// Функция, возвращающая случайное целое число из переданного диапазона включительно.
// Диапазон может быть только положительный, включая ноль.
// Также необходимо придумать, как функция должна вести себя,
// если передать значение «до» меньшее, чем значение «от», или равное ему.

const getRandomInt = (rangeStart = 0, rangeEnd = 0) => {
  // проверяем переданные аргументы на их корректность и если они не удовлетворяют требованиям - возвращаем 0 (например)
  if(!isPositiveNumber(rangeStart) || !isPositiveNumber(rangeEnd)) {
    return 0;
  }

  // если значение "до" <= "от", то одним из вариантов поведения функции может быть возврат значения "от"
  if(rangeEnd <= rangeStart) {
    return rangeStart;
  }

  // после всех проверок можно произвести расчёт случайного целого числа из диапазона
  return +rangeStart + Math.round(Math.random() * (rangeEnd - rangeStart));
};

// вызов-заглушка, чтобы сделать приятно линтеру...
getRandomInt();

// Задание №2:
// Функция, возвращающая случайное число с плавающей точкой из переданного диапазона включительно.
// Будет использоваться для генерации временных географических координат в следующем задании.

const getRandomFloat = (rangeStart = 0, rangeEnd = 0, digitsAfterPoint = 2) => {
  // проверяем переданные аргументы на их корректность и если они не удовлетворяют требованиям - возвращаем 0 (например)
  if(!isPositiveNumber(rangeStart) || !isPositiveNumber(rangeEnd) || !isPositiveNumber(digitsAfterPoint)) {
    return 0;
  }

  // если значение "до" <= "от", то одним из вариантов поведения функции может быть возврат значения "от"
  if(rangeEnd <= rangeStart) {
    return rangeStart;
  }

  // после всех проверок можно произвести расчёт случайного числа из диапазона с нужным количеством знаков после точки
  return (+rangeStart + Math.random() * (rangeEnd - rangeStart)).toFixed(digitsAfterPoint);
};

// вызов-заглушка, чтобы сделать приятно линтеру...
getRandomFloat();
