{"version":3,"sources":["webpack://keksobooking/./source/js/util.js","webpack://keksobooking/./source/js/avatar.js","webpack://keksobooking/./source/js/adform-photos.js","webpack://keksobooking/./source/js/forms.js","webpack://keksobooking/./source/js/map.js","webpack://keksobooking/./source/js/similar-objects.js","webpack://keksobooking/./source/js/main.js","webpack://keksobooking/./source/js/server-api.js"],"names":["isPositiveNumber","number","isNaN","getRandomElement","array","rangeStart","rangeEnd","Number","Math","round","random","getRandomInt","length","FILE_TYPES","fileChooser","document","querySelector","preview","mapFiltersForm","mapFiltersSelects","querySelectorAll","mapFiltersFieldset","mapFiltersCheckboxes","adForm","adFormTitle","adFormFieldsets","addressInputField","adFormReset","offerType","offerPrice","offerCheckIn","offerCheckInOptions","offerCheckOut","offerCheckOutOptions","offerNumberOfRooms","offerCapacity","offerCapacityOptions","minOfferPrices","bungalow","flat","house","palace","numberOfRoomsCapacity","1","2","3","100","setOfferTypeToPriceDependency","min","value","placeholder","addInvalidFormFieldNumberEventListener","max","setCheckOutToCheckInDependency","forEach","option","selected","setNumberOfRoomsCapacityDependency","disabled","field","minNumber","maxNumber","addEventListener","validity","rangeUnderflow","setCustomValidity","rangeOverflow","valueMissing","initializeAddressInputField","mainPinMarker","readOnly","latitude","getLatLng","lat","toFixed","longitude","lng","mapCanvas","additionalMarkers","mainPinIcon","L","icon","iconUrl","iconSize","iconAnchor","additionalPinIcon","marker","draggable","addOffersMarkersToMap","popupsWithCoordinates","map","remove","key","push","addTo","bindPopup","resetMainPinMarker","setLatLng","template","content","offerTypes","createMapOfPopupsWithCoordinates","offers","Map","offer","popup","cloneNode","popupTitle","popupTextAddress","popupTextPrice","popupType","popupTextCapacity","popupTextTime","popupFeatures","popupDescription","popupPhotos","popupPhotoFirst","popupAvatar","title","offerTitle","address","offerAddress","price","type","rooms","offerRooms","guests","offerGuests","checkin","offerCheckin","checkout","offerCheckout","features","offerFeatures","description","offerDescription","photos","offerPhotos","author","avatar","offerAvatar","generatedFeatures","textContent","clonedFeature","some","element","className","includes","isIncluded","photosContainer","photoTemplate","fragment","createDocumentFragment","photo","popupPhoto","src","append","createPhotos","createPopup","location","set","minLength","maxLength","tooShort","tooLong","classList","add","setView","tileLayer","attribution","initializeMap","whenReady","cb","onSuccess","onFail","file","files","fileName","name","toLowerCase","extension","endsWith","reader","FileReader","result","readAsDataURL","previewImage","createElement","style","width","height","setTimeout","reset","on","evt","newCoordinatesObject","target","preventDefault","form","fetch","method","credentials","body","FormData","then","response","ok","json","Error","status","statusText","catch","sendDataToServer","mainContainer","successMessage","appendChild","showSuccessMessage","failMessage","errorButton","showFailMessage","select","addMapFilterSelectChangeListener","checkbox","addMapFilterInputChangeListener","addMapFiltersChangeListener","filtersValues","input","checked","getFiltersValues","filteredOffers","filter","hasAllFiltersValues","slice","feature","filterOffers","mapOfPopups","message","alertContainer","zIndex","position","left","top","right","padding","fontSize","textAlign","backgroundColor","showAlert","err","randomOffers","elementsNumber","randomElements","randomElement","getFixedLengthArrayOfRandomElements"],"mappings":"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","file":"main.bundle.js","sourcesContent":["// модуль с утилитарными функциями\n\nconst isPositiveNumber = (number) => !isNaN(number) && number >= 0;\n\nconst getRandomInt = (rangeStart = 0, rangeEnd = 0) => {\n  if (!isPositiveNumber(rangeStart) || !isPositiveNumber(rangeEnd)) {\n    return 0;\n  }\n\n  if (rangeEnd <= rangeStart) {\n    return rangeStart;\n  }\n\n  return Number(rangeStart) + Math.round(Math.random() * (rangeEnd - rangeStart));\n};\n\nconst getRandomFloat = (rangeStart = 0, rangeEnd = 0, digitsAfterPoint = 2) => {\n  if (!isPositiveNumber(rangeStart) || !isPositiveNumber(rangeEnd) || !isPositiveNumber(digitsAfterPoint)) {\n    return 0;\n  }\n\n  if (rangeEnd <= rangeStart) {\n    return rangeStart;\n  }\n\n  return (Number(rangeStart) + Math.random() * (rangeEnd - rangeStart)).toFixed(digitsAfterPoint);\n};\n\nconst getRandomElement = (array) => {\n  return array[getRandomInt(0, array.length - 1)];\n};\n\nconst getRandomLengthArray = (array) => {\n  const randomLengthArrayElements = [];\n  const randomLength = getRandomInt(1, array.length);\n\n  while(randomLengthArrayElements.length < randomLength) {\n    const randomElement = getRandomElement(array);\n\n    if (!randomLengthArrayElements.includes(randomElement)) {\n      randomLengthArrayElements.push(randomElement);\n    }\n  }\n  return randomLengthArrayElements;\n};\n\nconst getFixedLengthArrayOfRandomElements = (array, elementsNumber) => {\n  const randomElements = [];\n\n  while(randomElements.length < elementsNumber) {\n    const randomElement = getRandomElement(array);\n\n    if (!randomElements.includes(randomElement)) {\n      randomElements.push(randomElement);\n    }\n  }\n  return randomElements;\n};\n\nexport { getRandomInt, getRandomFloat, getRandomElement, getRandomLengthArray, getFixedLengthArrayOfRandomElements };\n","// в данном модуле напишем логику загрузки кастомного аватара пользователя с предпросмотром\n\n// заведём разрешённые для загрузки типы файлов\nconst FILE_TYPES = ['gif', 'jpg', 'jpeg', 'png'];\n\n// найдём нужные элементы в DOM-дереве\nconst fileChooser = document.querySelector('input[id=\"avatar\"]');\nconst preview = document.querySelector('.ad-form-header__preview img');\n\n// напишем функцию для подписки на событие change input'а\nconst addAvatarChangeListener = () => {\n  fileChooser.addEventListener('change', () => {\n    const file = fileChooser.files[0];\n    const fileName = file.name.toLowerCase();\n\n    const hasExtensionMatch = FILE_TYPES.some((extension) => {\n      return fileName.endsWith(extension);\n    });\n\n    if (hasExtensionMatch) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', () => {\n        preview.src = reader.result;\n      });\n\n      reader.readAsDataURL(file);\n    }\n  });\n};\n\nexport { addAvatarChangeListener };\n","// в данном модуле напишем логику загрузки фотографии объявления с предпросмотром\n\n// также как и с аватаром заведём разрешённые для загрузки типы файлов\nconst FILE_TYPES = ['gif', 'jpg', 'jpeg', 'png'];\n\n// найдём нужные элементы в DOM-дереве\nconst fileChooser = document.querySelector('input[id=\"images\"]');\nconst preview = document.querySelector('.ad-form__photo');\n\n// напишем функцию для подписки на событие change input'а\nconst addPhotosChangeListener = () => {\n  fileChooser.addEventListener('change', () => {\n    const file = fileChooser.files[0];\n    const fileName = file.name.toLowerCase();\n\n    const hasExtensionMatch = FILE_TYPES.some((extension) => {\n      return fileName.endsWith(extension);\n    });\n\n    if (hasExtensionMatch) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', () => {\n        const previewImage = document.createElement('img');\n        previewImage.style.width = '70px';\n        previewImage.style.height = '70px';\n        previewImage.src = reader.result;\n        preview.append(previewImage);\n      });\n\n      reader.readAsDataURL(file);\n    }\n  });\n};\n\nexport { addPhotosChangeListener };\n","// это файл для работы с формами .ad-form и .map__filters\n// здесь напишем функции для перевода форм в неактивное / активное состояния\n// импортируем объект карты для того, чтобы работать с формами с учётом состояния этого объекта\n// import { map, mainPinMarker } from './map.js';\n\n// найдём сначала нужные элементы в DOM'е\nconst mapFiltersForm = document.querySelector('.map__filters');\nconst mapFiltersSelects = mapFiltersForm.querySelectorAll('select');\nconst mapFiltersFieldset = mapFiltersForm.querySelector('fieldset');\nconst mapFiltersCheckboxes = mapFiltersFieldset.querySelectorAll('input');\nconst adForm = document.querySelector('.ad-form');\nconst adFormTitle = adForm.querySelector('input[name=\"title\"]');\nconst adFormFieldsets = adForm.querySelectorAll('fieldset');\nconst addressInputField = adForm.querySelector('input[name = \"address\"]');\nconst adFormReset = adForm.querySelector('.ad-form__reset');\nconst offerType = adForm.querySelector('select[name=\"type\"]');\nconst offerPrice = adForm.querySelector('input[name=\"price\"]');\nconst offerCheckIn = adForm.querySelector('select[name=\"timein\"]');\nconst offerCheckInOptions = offerCheckIn.querySelectorAll('option');\nconst offerCheckOut = adForm.querySelector('select[name=\"timeout\"]');\nconst offerCheckOutOptions = offerCheckOut.querySelectorAll('option');\nconst offerNumberOfRooms = adForm.querySelector('select[name=\"rooms\"]');\nconst offerCapacity = adForm.querySelector('select[name=\"capacity\"]');\nconst offerCapacityOptions = offerCapacity.querySelectorAll('option');\n\n// словарь \"тип размещения - цена\"\nconst minOfferPrices = {\n  bungalow: 0,\n  flat: 1000,\n  house: 5000,\n  palace: 10000,\n};\n\n// словарь \"количество комнат - количество гостей\"\nconst numberOfRoomsCapacity = {\n  1: 1,\n  2: 2,\n  3: 3,\n  100: 0,\n};\n\n// напишем отдельные функции для установления зависимостей между полями\n// эти функции будем передавать в качестве коллбэков в функцию инициализации форм?\n\n// по ТЗ: «Тип жилья» — выбор опции меняет атрибуты минимального значения и плейсхолдера поля «Цена за ночь»\nconst setOfferTypeToPriceDependency = () => {\n  offerPrice.min = minOfferPrices[offerType.value];\n  offerPrice.placeholder = minOfferPrices[offerType.value];\n  addInvalidFormFieldNumberEventListener(offerPrice, offerPrice.min, offerPrice.max);\n};\n\n// по ТЗ: «Время заезда», «Время выезда» — выбор опции одного поля автоматически изменят значение другого (они д.б. одинаковы)\nconst setCheckOutToCheckInDependency = () => {\n  offerCheckOutOptions.forEach((option) => {\n    if (option.value === offerCheckIn.value) {\n      option.selected = true;\n    }\n  });\n};\n\nconst setCheckInToCheckOutDependency = () => {\n  offerCheckInOptions.forEach((option) => {\n    if (option.value === offerCheckOut.value) {\n      option.selected = true;\n    }\n  });\n};\n\n// по ТЗ: Поле «Количество комнат» синхронизировано с полем «Количество мест» таким образом,\n// что при выборе количества комнат вводятся ограничения на допустимые варианты выбора количества гостей:\nconst setNumberOfRoomsCapacityDependency = () => {\n  offerCapacity.value = numberOfRoomsCapacity[offerNumberOfRooms.value];\n\n  // добавим перед каждым заходом в switch сброс аттрибута disabled в значение false, иначе на первом же шаге\n  // большая часть option'ов будет уже недоступна\n  offerCapacityOptions.forEach((option) => {\n    option.disabled = false;\n  })\n\n  switch (Number(offerNumberOfRooms.value)) {\n    case 1:\n      offerCapacityOptions.forEach((option) => {\n        if (option.value !== '1') {\n          option.disabled = true;\n        }\n      });\n      break;\n    case 2:\n      offerCapacityOptions.forEach((option) => {\n        if (option.value !== '1' && option.value !== '2') {\n          option.disabled = true;\n        }\n      });\n      break;\n    case 3:\n      offerCapacityOptions.forEach((option) => {\n        if (option.value !== '1' && option.value !== '2' && option.value !== '3') {\n          option.disabled = true;\n        }\n      });\n      break;\n    case 100:\n      offerCapacityOptions.forEach((option) => {\n        if (option.value !== '0') {\n          option.disabled = true;\n        }\n      });\n      break;\n  }\n};\n\n// функция добавления обработчика события invalid на валидируемое ПО ДЛИНЕ поле\nconst addInvalidFormFieldLengthEventListener = (field, minLength, maxLength) => {\n  field.addEventListener('invalid', () => {\n    if (field.validity.tooShort) {\n      field.setCustomValidity(`Введите минимум ${minLength} символа(ов)`);\n    } else if (field.validity.tooLong) {\n      field.setCustomValidity(`Введите максимум ${maxLength} символа(ов)`);\n    } else if (field.validity.valueMissing) {\n      field.setCustomValidity('Обязательное поле');\n    } else {\n      field.setCustomValidity('');\n    }\n  });\n};\n\n// функция добавления обработчика события invalid на валидируемое ПО ЧИСЛУ поле\nconst addInvalidFormFieldNumberEventListener = (field, minNumber, maxNumber) => {\n  field.addEventListener('invalid', () => {\n    if (field.validity.rangeUnderflow) {\n      field.setCustomValidity(`Стоимость должна начинаться от ${minNumber}`);\n    } else if (field.validity.rangeOverflow) {\n      field.setCustomValidity(`Стоимость не должна превышать ${maxNumber}`);\n    } else if (field.validity.valueMissing) {\n      field.setCustomValidity('Обязательное поле');\n    } else {\n      field.setCustomValidity('');\n    }\n  });\n};\n\n// эта функция будет\n// - задавать начальные зависимости между полями (с помощью вызова дополнительных внутренних функций)\n// - подписываться на изменение этих полей для сохранения установленных зависимостей в процессе взаимодействия с формой\n// + возможно проверять вводимые данные (но это не точно - может быть лучше проверку (валидацию) сделать отдельной функцией)\nconst initializeForms = () => {\n  setOfferTypeToPriceDependency();\n  setCheckOutToCheckInDependency();\n  setNumberOfRoomsCapacityDependency();\n\n  offerType.addEventListener('change', () => {\n    setOfferTypeToPriceDependency();\n  });\n\n  offerCheckIn.addEventListener('change', () => {\n    setCheckOutToCheckInDependency();\n  });\n\n  offerCheckOut.addEventListener('change', () => {\n    setCheckInToCheckOutDependency();\n  });\n\n  offerNumberOfRooms.addEventListener('change', () => {\n    setNumberOfRoomsCapacityDependency();\n  });\n\n  addInvalidFormFieldLengthEventListener(adFormTitle, adFormTitle.minLength, adFormTitle.maxLength);\n};\n\n// функция для получения массива со значениями фильтров для меток\nconst getFiltersValues = () => {\n  const filtersValues = [];\n\n  mapFiltersSelects.forEach((select) => {\n    filtersValues.push(select.value);\n  });\n\n  mapFiltersCheckboxes.forEach((input) => {\n    if (input.checked) {\n      filtersValues.push(input.value);\n    }\n  });\n\n  return filtersValues;\n}\n\n// функция для перевода формы подачи объявления в активное состояние\nconst enableAdForm = () => {\n  adForm.classList.remove('ad-form--disabled');\n  adFormFieldsets.forEach((element) => {\n    element.disabled = false;\n  });\n};\n\n// функция для перевода формы с фильтрами меток в активное состояние\nconst enableMapFiltersForm = () => {\n  mapFiltersForm.classList.remove('map__filters--disabled');\n  mapFiltersSelects.forEach((element) => {\n    element.disabled = false;\n  });\n  mapFiltersFieldset.disabled = false;\n};\n\n// функция для перевода форм в неактивное состояние\nconst disableForms = () => {\n  adForm.classList.add('ad-form--disabled');\n  adFormFieldsets.forEach((element) => {\n    element.disabled = true;\n  });\n  mapFiltersForm.classList.add('map__filters--disabled');\n  mapFiltersSelects.forEach((element) => {\n    element.disabled = true;\n  });\n  mapFiltersFieldset.disabled = true;\n};\n\n// функция для инициализации инпута с координатами (выношу в отдельную функцию, так как этот конкретный инпут имеет свою логику)\nconst initializeAddressInputField = (mainPinMarker) => {\n  addressInputField.readOnly = true;\n  const latitude = mainPinMarker.getLatLng().lat.toFixed(5);\n  const longitude = mainPinMarker.getLatLng().lng.toFixed(5);\n  addressInputField.value = `${latitude}, ${longitude}`;\n};\n\n// функция подписки на событие moveend метки карты\nconst addMoveEndListenerToMarker = (pinMarker) => {\n  pinMarker.on('moveend', (evt) => {\n    let newCoordinatesObject = evt.target.getLatLng();\n    addressInputField.value = `${newCoordinatesObject.lat.toFixed(5)}, ${newCoordinatesObject.lng.toFixed(5)}`;\n  });\n};\n\n// функция создания подписки на событие submit формы подачи объявления\nconst addAdFormSubmitListener = (cb) => {\n  adForm.addEventListener('submit', (evt) => {\n    evt.preventDefault();\n    cb(evt.target);\n  });\n};\n\n// функция создания подписки на событие change всем select'ам фильтров меток\nconst addMapFilterSelectChangeListener = (cb) => {\n  mapFiltersSelects.forEach((select) => {\n    select.addEventListener('change', () => {\n      cb();\n    });\n  });\n};\n\n// функция создания подписки на событие change всем input'ам фильтров меток\nconst addMapFilterInputChangeListener = (cb) => {\n  mapFiltersCheckboxes.forEach((checkbox) => {\n    checkbox.addEventListener('change', () => {\n      cb();\n    });\n  });\n};\n\n// общая функция создания подписки на изменение фильтров (чтобы в main.js использовать одну функцию вместо двух)\nconst addMapFiltersChangeListener = (cb) => {\n  addMapFilterSelectChangeListener(cb);\n  addMapFilterInputChangeListener(cb);\n}\n\n// функция, которая сбрасывает формы в исходное состояние (пригодится нам в качестве коллбэка при успешной отправке формы)\nconst resetForms = () => {\n  mapFiltersForm.reset();\n  adForm.reset();\n}\n\n// функция создания подписки на событие нажатия кнопки ОЧИСТИТЬ\n// Примечание: кнопка ОЧИСТИТЬ с типом reset и так без всяких обработчиков очистить форму подачи объявления,\n// но форма с фильтрами очищена не будет, так как это отдельная форма, поэтому нужна эта функция\nconst addAdFormResetListener = (cb) => {\n  adFormReset.addEventListener('click', () => {\n    mapFiltersForm.reset();\n    cb();\n  })\n};\n\nexport {\n  initializeForms,\n  enableAdForm,\n  enableMapFiltersForm,\n  addMapFiltersChangeListener,\n  getFiltersValues,\n  disableForms,\n  initializeAddressInputField,\n  addMoveEndListenerToMarker,\n  addAdFormSubmitListener,\n  addAdFormResetListener,\n  resetForms\n};\n","/* global L:readonly */\n\n// в этом модуле будем писать функции по работе с картой и связанными с ней объектами\n\n// найдём элемент, в котором разместим карту\nconst mapCanvas = document.querySelector('.map__canvas');\n\n// заведём массив для хранения маркеров (меток) для того, чтобы из него брать метки для добавления их на карту\n// и в нужный момент очищать массив (пригодится при удалении меток с карты в контексте фильтрации объявлений)\nconst additionalMarkers = [];\n\n// опишем главную метку\nconst mainPinIcon = L.icon({\n  iconUrl: '../img/main-pin.svg',\n  iconSize: [52, 52],\n  iconAnchor: [26, 52],\n});\n\n// опишем доп. метку\nconst additionalPinIcon = L.icon({\n  iconUrl: '../img/pin.svg',\n  iconSize: [52, 52],\n  iconAnchor: [26, 52],\n});\n\nconst mainPinMarker = L.marker(\n  {\n    lat: 35.65283,\n    lng: 139.83947,\n  },\n  {\n    draggable: true,\n    icon: mainPinIcon,\n  },\n);\n\n// функция инициализации карты\n// По моей задумке эта функция делает следующее:\n// 1) создаёт объект карты\n// 2) создаёт слой карты с изображением и копирайтом\n// 3) размещает на карте главную метку\n// 4) возвращает массив с нужными нам для дальнейшей работы объектами (карта, главная метка и т.д.)\n// таким образом потребитель данной функции (разработчик) при её вызове получает рабочую карту (без меток объявлений, так как\n// этот функционал по смыслу должен быть прописан в другом модуле - similar-objects.js)\nconst initializeMap = () => {\n  const map = L.map(mapCanvas)\n    .setView({\n      lat: 35.65283,\n      lng: 139.83947,\n    }, 9);\n\n  L.tileLayer(\n    'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    },\n  )\n    .addTo(map);\n  mainPinMarker.addTo(map);\n\n  return [map, mainPinMarker];\n};\n\n// функция добавления меток объявлений на карту\nconst addOffersMarkersToMap = (popupsWithCoordinates, map) => {\n\n  // добавим очистку меток перед нанесением на карту новых\n  if (additionalMarkers.length > 0) {\n    additionalMarkers.forEach((marker) => {\n      marker.remove();\n    })\n    additionalMarkers.length = 0;\n  }\n\n  popupsWithCoordinates.forEach((value, key) => {\n    const marker = L.marker(\n      {\n        lat: value.lat,\n        lng: value.lng,\n      },\n      {\n        draggable: false,\n        icon: additionalPinIcon,\n      },\n    );\n    additionalMarkers.push(marker);\n    marker.addTo(map).bindPopup(key);\n  });\n};\n\n// функция возврата главной метки  в исходное положение (понадобится в качестве коллбэка при успешной отправке формы)\nconst resetMainPinMarker = () => {\n  mainPinMarker.setLatLng(\n    {\n      lat: 35.65283,\n      lng: 139.83947,\n    },\n  );\n};\n\nexport { initializeMap, addOffersMarkersToMap, resetMainPinMarker };\n","const LOW_PRICE = 10000;\nconst MIDDLE_PRICE = 50000;\n\nconst template = document.querySelector('#card').content.querySelector('.popup');\n\n// словарь видов размещения\nconst offerTypes = {\n  flat: 'Квартира',\n  bungalow: 'Бунгало',\n  house: 'Дом',\n  palace: 'Дворец',\n};\n\n// функция для проверки присутствия элемента массива удобств в классах элемента списка popup__features\nconst isIncluded = (clonedFeature, generatedFeatures) => generatedFeatures.some((element) => clonedFeature.className.includes(`--${element}`));\n\n// функция для проверки элементов списка popup__features\n// если такого удобства в сгенерированном оффере нет - удаляем лишку нафиг\nconst createFeatures = (clonedFeatures, generatedFeatures) => {\n  clonedFeatures.forEach((clonedFeature) => {\n    if (!isIncluded(clonedFeature, generatedFeatures)) {\n      clonedFeature.remove();\n    }\n  });\n};\n\n// функция для создания элемента img с правильным src\nconst createPhotos = (photosContainer, photoTemplate, photos) => {\n  const fragment = document.createDocumentFragment();\n\n  photos.forEach((photo) => {\n    const popupPhoto = photoTemplate.cloneNode(true);\n    popupPhoto.src = photo;\n    fragment.append(popupPhoto);\n  });\n\n  photoTemplate.remove();\n  photosContainer.append(fragment);\n};\n\n// функция для создания попапа\nconst createPopup = (template, offer) => {\n  const popup = template.cloneNode(true);\n  const popupTitle = popup.querySelector('.popup__title');\n  const popupTextAddress = popup.querySelector('.popup__text--address');\n  const popupTextPrice = popup.querySelector('.popup__text--price');\n  const popupType = popup.querySelector('.popup__type');\n  const popupTextCapacity = popup.querySelector('.popup__text--capacity');\n  const popupTextTime = popup.querySelector('.popup__text--time');\n  const popupFeatures = popup.querySelector('.popup__features').querySelectorAll('li');\n  const popupDescription = popup.querySelector('.popup__description');\n  const popupPhotos = popup.querySelector('.popup__photos');\n  const popupPhotoFirst = popupPhotos.querySelector('.popup__photo');\n  const popupAvatar = popup.querySelector('.popup__avatar');\n\n  const {\n    offer: {\n      title: offerTitle,\n      address: offerAddress,\n      price: offerPrice,\n      type: offerType,\n      rooms: offerRooms,\n      guests: offerGuests,\n      checkin: offerCheckin,\n      checkout: offerCheckout,\n      features: offerFeatures,\n      description: offerDescription,\n      photos: offerPhotos,\n    },\n    author: {\n      avatar: offerAvatar,\n    },\n  } = offer;\n\n  popupTitle.textContent = offerTitle ? offerTitle : popupTitle.remove();\n  popupTextAddress.textContent = offerAddress ? offerAddress : popupTextAddress.remove();\n  popupTextPrice.textContent = offerPrice ? `${offerPrice} \\u20BD/ночь` : popupTextPrice.remove();\n  popupType.textContent = offerTypes[offerType];\n  popupTextCapacity.textContent = offerRooms && offerGuests ? `${offerRooms} комнаты для ${offerGuests} гостей` : popupTextCapacity.remove();\n  popupTextTime.textContent = offerCheckin && offerCheckout ? `Заезд после ${offerCheckin}, выезд до ${offerCheckout}` : popupTextTime.remove();\n  createFeatures(popupFeatures, offerFeatures);\n  popupDescription.textContent = offerDescription ? offerDescription : popupDescription.remove();\n  createPhotos(popupPhotos, popupPhotoFirst, offerPhotos);\n  popupAvatar.src = offerAvatar ? offerAvatar : popupAvatar.remove();\n\n  return popup;\n};\n\n// теперь напишем функцию для строгой фильтрации объявлений (то есть должно быть строгое соответствие фильтрам -\n// при любом несовпадении объявление НЕ выводится)\nconst filterOffers = (offers, filtersValues) => {\n  return offers.filter((offer) => {\n    let hasAllFiltersValues = true;\n\n    if (filtersValues[0] !== 'any' && offer.offer.type !== filtersValues[0]) {\n      hasAllFiltersValues = false;\n    }\n\n    if (filtersValues[1] === 'low' && offer.offer.price > LOW_PRICE) {\n      hasAllFiltersValues = false;\n    }\n\n    if (filtersValues[1] === 'middle' && (offer.offer.price < LOW_PRICE || offer.offer.price > MIDDLE_PRICE)) {\n      hasAllFiltersValues = false;\n    }\n\n    if (filtersValues[1] === 'high' && offer.offer.price < MIDDLE_PRICE) {\n      hasAllFiltersValues = false;\n    }\n\n    if (filtersValues[2] !== 'any' && Number(filtersValues[2]) !== offer.offer.rooms) {\n      hasAllFiltersValues = false;\n    }\n\n    if (filtersValues[3] !== 'any' && Number(filtersValues[3]) > offer.offer.rooms) {\n      hasAllFiltersValues = false;\n    }\n\n    // далее проверим наличие удобств (удобства в массиве значений фильтров начинаются с индекса 4\n    if (filtersValues.length > 4) {\n      const features = filtersValues.slice(4);\n      features.forEach((feature) => {\n        if (!offer.offer.features.includes(feature)) {\n          hasAllFiltersValues = false;\n        }\n      });\n    }\n\n    return hasAllFiltersValues;\n  });\n};\n\n// функция для создания попапов с координатами (источник данных может быть как сгенерирован на клиенте, так и получен с сервера)\n// Эта функция создаёт и возвращает мапу (объект типа Map), в которой\n// KEY = HTMLElement (сделанный на основе шаблона попап, готовый к добавлению в балун метки карты)\n// VALUE = объект с координатами, которые мы используем для правильного размещения меток объявлений на карте\nconst createMapOfPopupsWithCoordinates = (offers) => {\n  const popupsWithCoordinates = new Map();\n  offers.forEach((offer) => {\n    const popup = createPopup(template, offer);\n    const location = offer.location;\n    popupsWithCoordinates.set(popup, location);\n  });\n\n  return popupsWithCoordinates;\n};\n\nexport { filterOffers, createMapOfPopupsWithCoordinates };\n","// точка входа, связывающая другие модули\nimport { getFixedLengthArrayOfRandomElements } from './util.js';\nimport { addAvatarChangeListener } from './avatar.js';\nimport { addPhotosChangeListener }from './adform-photos.js'\nimport {\n  initializeForms,\n  enableAdForm,\n  enableMapFiltersForm,\n  addMapFiltersChangeListener,\n  getFiltersValues,\n  disableForms,\n  initializeAddressInputField,\n  addMoveEndListenerToMarker,\n  addAdFormSubmitListener,\n  addAdFormResetListener,\n  resetForms\n} from './forms.js';\nimport { initializeMap, addOffersMarkersToMap, resetMainPinMarker } from './map.js';\nimport { filterOffers, createMapOfPopupsWithCoordinates } from './similar-objects.js';\nimport { getDataFromServer, sendDataToServer, showAlert, showSuccessMessage, showFailMessage } from './server-api.js';\n\nconst OFFERS_COUNT = 10;\nlet offers;\n\n// теперь попробуем собрать из этих кубиков работающую программу\ninitializeForms();\ndisableForms();\nconst [map, mainPinMarker] = initializeMap();\nmap.whenReady(() => {\n  enableAdForm();\n  addAvatarChangeListener();\n  addPhotosChangeListener();\n  addAdFormResetListener(() => {\n    resetMainPinMarker();\n    setTimeout(() =>\n      initializeAddressInputField(mainPinMarker), 0);\n  });\n  initializeAddressInputField(mainPinMarker);\n  addMoveEndListenerToMarker(mainPinMarker);\n  addAdFormSubmitListener((form) => {\n    sendDataToServer(\n      () => {\n        showSuccessMessage();\n        resetForms();\n        resetMainPinMarker();\n        setTimeout(() =>\n          initializeAddressInputField(mainPinMarker), 0);\n      },\n      () => showFailMessage(),\n      form);\n  });\n  getDataFromServer(\n    (json) => {\n      addMapFiltersChangeListener(() => {\n        const filtersValues = getFiltersValues();\n        const filteredOffers = filterOffers(offers, filtersValues);\n        const mapOfPopups = createMapOfPopupsWithCoordinates(filteredOffers);\n        addOffersMarkersToMap(mapOfPopups, map);\n      });\n      enableMapFiltersForm();\n      return json;\n    },\n    () => showAlert('При получении данных с сервера произошла ошибка'),\n  )\n    .then(json => {\n      offers = json;\n      const randomOffers = getFixedLengthArrayOfRandomElements(offers, OFFERS_COUNT);\n      return createMapOfPopupsWithCoordinates(randomOffers);\n    })\n    .then(popupsWithCoordinates => addOffersMarkersToMap(popupsWithCoordinates, map));\n});\n","// время показа ошибки\nconst ALERT_SHOW_TIME = 5000;\n\n// Для взаимодействия с сервером напишем 2 отдельные функции\n// 1) Функция получения данных с сервера (она будет возвращать JSON - массив объектов)\nconst getDataFromServer = (onSuccess, onFail) => {\n  return fetch(\n    'https://22.javascript.pages.academy/keksobooking/data',\n    {\n      method: 'GET',\n      credentials: 'same-origin',\n    },\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`${response.status} ${response.statusText}`);\n    })\n    .then(json => onSuccess(json))\n    .catch(err => onFail(err));\n};\n\n// 2) Функция отправки данных на сервер\nconst sendDataToServer = (onSuccess, onFail, form) => {\n  fetch(\n    'https://22.javascript.pages.academy/keksobooking',\n    {\n      method: 'POST',\n      credentials: 'same-origin',\n      body: new FormData(form),\n    },\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`${response.status} ${response.statusText}`);\n    })\n    .then(() => onSuccess())\n    .catch(() => onFail());\n};\n\n// при успешной отправке объявления будем рендерить соответствующее сообщение на странице согласно ТЗ\nconst showSuccessMessage = () => {\n  const mainContainer = document.querySelector('main');\n  const successMessageTemplate = document.querySelector('#success').content.querySelector('.success');\n  const successMessage = successMessageTemplate.cloneNode(true);\n  mainContainer.appendChild(successMessage);\n\n  // сразу при создании сообщения повесим на всё окно обработчик на click и Escape\n  // для того, чтобы пользователь мог скрыть сообщение\n  document.addEventListener('click', () => {\n    successMessage.remove();\n  });\n  document.addEventListener('keydown', (evt) => {\n    if (evt.key === 'Escape') {\n      successMessage.remove();\n    }\n  });\n};\n\n// при неудачной отправке объявления будем рендерить соответствующее сообщение на странице согласно ТЗ\nconst showFailMessage = () => {\n  const mainContainer = document.querySelector('main');\n  const failMessageTemplate = document.querySelector('#error').content.querySelector('.error');\n  const failMessage = failMessageTemplate.cloneNode(true);\n  const errorButton = failMessage.querySelector('.error__button');\n  mainContainer.appendChild(failMessage);\n\n  // сразу при создании сообщения повесим на всё окно обработчик на click и Escape, а также на click по специальной кнопке\n  // для того, чтобы пользователь мог скрыть сообщение\n  document.addEventListener('click', () => {\n    failMessage.remove();\n  });\n  document.addEventListener('keydown', (evt) => {\n    if (evt.key === 'Escape') {\n      failMessage.remove();\n    }\n  });\n  errorButton.addEventListener('click', () => {\n    failMessage.remove();\n  });\n};\n\n// при ошибке получения данных будем рендерить красную полоску\n// с текстом \"При работе с сервером произошла ошибка\"\nconst showAlert = (message) => {\n  const alertContainer = document.createElement('div');\n  alertContainer.style.zIndex = 100;\n  alertContainer.style.position = 'absolute';\n  alertContainer.style.left = 0;\n  alertContainer.style.top = 0;\n  alertContainer.style.right = 0;\n  alertContainer.style.padding = '10px 3px';\n  alertContainer.style.fontSize = '30px';\n  alertContainer.style.textAlign = 'center';\n  alertContainer.style.backgroundColor = 'red';\n\n  alertContainer.textContent = message;\n\n  document.body.append(alertContainer);\n\n  setTimeout(() => {\n    alertContainer.remove();\n  }, ALERT_SHOW_TIME);\n};\n\n\nexport { getDataFromServer, sendDataToServer, showAlert, showSuccessMessage, showFailMessage };\n"],"sourceRoot":""}